name: CI

on:
  push:
    branches:
      - "*"
    tags:
      - v*
  pull_request:
    branches:
      - master
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test ${{ matrix.rust-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        rust-version:
          - stable


    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust-version }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Test compilation
        run: cargo check --all --all-targets
      - name: Test formatting
        run: cargo fmt --all -- --check
      - name: Test clippy
        run: cargo clippy --all --all-targets -- -D warnings
      - name: Test documentation
        run: cargo doc --all --no-deps
      - name: Test with code coverage
        run: cargo tarpaulin --release --engine llvm --follow-exec --post-test-delay 10 --coveralls ${{ secrets.COVERALLS_REPO_TOKEN }}

  release-please:
    name: Execute release chores

    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest
    needs: test

    outputs:
      created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: rust
          bump-patch-for-minor-pre-major: true
          bump-minor-pre-major: true

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.created

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Publish
        run: cargo publish --verbose --locked --no-verify --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  release:
    name: release-${{ matrix.platform.platform_name }} 
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          # From https://github.com/houseabsolute/actions-rust-cross/blob/v0/.github/workflows/test.yml
          - platform_name: FreeBSD-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-freebsd
            expect_file_re: "x86-64.+FreeBSD"
            expect_cross: "--expect-cross"
            strip: false
            can_test: false

          - platform_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            expect_file_re: "ELF.+x86-64"
            expect_cross: "--no-expect-cross"
            strip: true
            can_test: true

          - platform_name: Linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            expect_file_re: "aarch64"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: Linux-aarch64-with-cross-v0.2.3
            os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            cross-version: "v0.2.3"
            expect_file_re: "aarch64"
            expect_cross: "--expect-cross"
            expect_cross_version: "0.2.3"
            strip: false
            can_test: true

          - platform_name: Linux-arm
            os: ubuntu-20.04
            target: arm-unknown-linux-musleabi
            expect_file_re: "32.+ARM"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: Linux-i586
            os: ubuntu-20.04
            target: i586-unknown-linux-musl
            expect_file_re: "ELF.+80386"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: Linux-i686
            os: ubuntu-20.04
            target: i686-unknown-linux-musl
            expect_file_re: "ELF.+80386"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: Linux-powerpc
            os: ubuntu-20.04
            target: powerpc-unknown-linux-gnu
            expect_file_re: "32.+PowerPC"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: Linux-powerpc64
            os: ubuntu-20.04
            target: powerpc64-unknown-linux-gnu
            expect_file_re: "64.+PowerPC"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: Linux-powerpc64le
            os: ubuntu-20.04
            target: powerpc64le-unknown-linux-gnu
            expect_file_re: "64.+PowerPC"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: Linux-riscv64
            os: ubuntu-20.04
            target: riscv64gc-unknown-linux-gnu
            expect_file_re: "64.+RISC-V"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: Linux-s390x
            os: ubuntu-20.04
            target: s390x-unknown-linux-gnu
            expect_file_re: "64.+S/390"
            expect_cross: "--expect-cross"
            strip: false
            can_test: true

          - platform_name: NetBSD-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-netbsd
            expect_file_re: "x86-64.+NetBSD"
            expect_cross: "--expect-cross"
            strip: false
            can_test: false

          - platform_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            expect_file_re: "Aarch64.+Windows"
            expect_cross: "--no-expect-cross"
            strip: false
            can_test: false

          - platform_name: Windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
            expect_file_re: "80386.+Windows"
            expect_cross: "--no-expect-cross"
            strip: true
            can_test: true

          - platform_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            expect_file_re: "x86-64.+Windows"
            strip: true
            can_test: true

          - platform_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            expect_file_re: "Mach-O.+x86_64"
            expect_cross: "--no-expect-cross"
            strip: true
            can_test: true

          - platform_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            expect_file_re: "Mach-O.+arm64"
            expect_cross: "--no-expect-cross"
            strip: true
            can_test: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: ${{ matrix.platform.stripped }}
          toolchain: stable
